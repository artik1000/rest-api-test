{"ast":null,"code":"import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nimport UserItem from '@/components/MySlider/UserItem';\nimport UserPagination from '@/components/MySlider/UserPagination';\nimport MySortGroup from '../SortGroup';\nexport default {\n  name: 'user-slider',\n  components: {\n    MySortGroup,\n    UserPagination,\n    UserItem\n  },\n  props: {\n    users: Array,\n    buttonEnable: Boolean,\n    usersOnPage: Number\n  },\n\n  data() {\n    return {\n      page: 1,\n      pageFirst: 0,\n      pageLast: 0\n    };\n  },\n\n  computed: { ...mapState({\n      selectedSort: state => state.TestModule.selectedSort,\n      totalPages: state => state.TestModule.totalPages,\n      usersOnPages: state => state.TestModule.usersOnPages\n    }),\n    ...mapGetters({})\n  },\n  methods: { ...mapMutations({\n      setUsers: 'TestModule/setUsers',\n      setUsersOnPage: 'TestModule/setUsersOnPage'\n    }),\n\n    changePage(pageNumber) {\n      this.page = pageNumber;\n      this.pageFirst = this.usersOnPages * this.page - this.usersOnPages;\n      this.pageLast = this.usersOnPages * this.page;\n    }\n\n  },\n\n  mounted() {\n    this.setUsersOnPage(this.usersOnPage);\n    this.pageLast = this.usersOnPages;\n  }\n\n};","map":{"version":3,"mappings":"AA2BA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,UAA7C,QAA+D,MAA/D;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,eAAe;EACbC,IAAI,EAAE,aADO;EAEbC,UAAU,EAAE;IACVF,WADU;IAEVD,cAFU;IAGVD;EAHU,CAFC;EAObK,KAAK,EAAE;IACLC,KAAK,EAAEC,KADF;IAELC,YAAY,EAAEC,OAFT;IAGLC,WAAW,EAAEC;EAHR,CAPM;;EAYbC,IAAG,GAAK;IACN,OAAO;MACLC,IAAI,EAAE,CADD;MAELC,SAAS,EAAE,CAFN;MAGLC,QAAQ,EAAE;IAHL,CAAP;EAKD,CAlBY;;EAmBbC,QAAQ,EAAE,EACJ,GAAGpB,QAAQ,CAAC;MACRqB,YAAY,EAAEC,KAAI,IAAKA,KAAK,CAACC,UAAN,CAAiBF,YADhC;MAERG,UAAU,EAAEF,KAAI,IAAKA,KAAK,CAACC,UAAN,CAAiBC,UAF9B;MAGRC,YAAY,EAAEH,KAAI,IAAKA,KAAK,CAACC,UAAN,CAAiBE;IAHhC,CAAD,CADP;IAMJ,GAAGtB,UAAU,CAAC,EAAD;EANT,CAnBG;EA4BbuB,OAAO,EAAE,EACP,GAAGzB,YAAY,CAAC;MACd0B,QAAQ,EAAE,qBADI;MAEdC,cAAc,EAAE;IAFF,CAAD,CADR;;IAKPC,UAAS,CAAGC,UAAH,EAAe;MACtB,KAAKb,IAAL,GAAYa,UAAZ;MACA,KAAKZ,SAAL,GAAiB,KAAKO,YAAL,GAAoB,KAAKR,IAAzB,GAAgC,KAAKQ,YAAtD;MACA,KAAKN,QAAL,GAAgB,KAAKM,YAAL,GAAoB,KAAKR,IAAzC;IACF;;EATO,CA5BI;;EAuCbc,OAAM,GAAK;IACT,KAAKH,cAAL,CAAoB,KAAKd,WAAzB;IACA,KAAKK,QAAL,GAAgB,KAAKM,YAArB;EACF;;AA1Ca,CAAf","names":["mapState","mapMutations","mapActions","mapGetters","UserItem","UserPagination","MySortGroup","name","components","props","users","Array","buttonEnable","Boolean","usersOnPage","Number","data","page","pageFirst","pageLast","computed","selectedSort","state","TestModule","totalPages","usersOnPages","methods","setUsers","setUsersOnPage","changePage","pageNumber","mounted"],"sourceRoot":"","sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/components/MySlider/UserSlider.vue"],"sourcesContent":["<template>\n    <my-sort-group/>\n    <div v-if=\"this.users.length > 0\">\n    <section class=\"users__wrapper\">\n        <user-item\n                v-for=\"user in users.slice(pageFirst,pageLast)\"\n                :key=\"user.id\"\n                :user=\"user\"\n                :buttonEnable=\"buttonEnable\"\n        />\n    </section>\n    <div class=\"pagination__wrapper\">\n        <user-pagination\n                v-for=\"pageNumber in totalPages\"\n                :key=\"pageNumber\"\n                :class=\"{'pagination__active': page === pageNumber}\"\n                @click=\"changePage(pageNumber)\"\n        >\n            {{pageNumber}}\n        </user-pagination>\n    </div>\n    </div>\n    <div style=\"text-align: center\" v-else>\n        <h1>Пользователей нет</h1>\n    </div>\n</template>\n<script>\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\nimport UserItem from '@/components/MySlider/UserItem'\nimport UserPagination from '@/components/MySlider/UserPagination'\nimport MySortGroup from '../SortGroup'\nexport default {\n  name: 'user-slider',\n  components: {\n    MySortGroup,\n    UserPagination,\n    UserItem\n  },\n  props: {\n    users: Array,\n    buttonEnable: Boolean,\n    usersOnPage: Number,\n  },\n  data () {\n    return {\n      page: 1,\n      pageFirst: 0,\n      pageLast: 0,\n    }\n  },\n  computed: {\n        ...mapState({\n            selectedSort: state => state.TestModule.selectedSort,\n            totalPages: state => state.TestModule.totalPages,\n            usersOnPages: state => state.TestModule.usersOnPages\n        }),\n        ...mapGetters({\n        })\n  },\n  methods: {\n    ...mapMutations({\n      setUsers: 'TestModule/setUsers',\n      setUsersOnPage: 'TestModule/setUsersOnPage'\n    }),\n    changePage (pageNumber) {\n      this.page = pageNumber;\n      this.pageFirst = this.usersOnPages * this.page - this.usersOnPages;\n      this.pageLast = this.usersOnPages * this.page;\n    }\n  },\n  mounted () {\n    this.setUsersOnPage(this.usersOnPage);\n    this.pageLast = this.usersOnPages;\n  }\n}\n</script>\n<style lang=\"sass\" scoped>\n.users__wrapper\n   display: flex\n   flex-direction: row\n   gap: 10px\n.pagination__wrapper\n    display: flex\n    flex-direction: row\n    justify-content: center\n    margin-top: 16px\n    gap: 5px\n.pagination__active\n    color: blue !important\n    background: white !important\n    border: 2px solid blue !important\n</style>\n"]},"metadata":{},"sourceType":"module"}