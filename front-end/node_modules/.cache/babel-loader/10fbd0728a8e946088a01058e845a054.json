{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"page__description\"\n}, \"User is unset\", -1);\n\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"page__description\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.gotUser[0] === '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h1\", _hoisted_5, \"Page of \" + _toDisplayString(_ctx.gotUser[0].name), 1)]));\n}","map":{"version":3,"mappings":";;;;;gCAEQA,oBAAgD,IAAhD,EAAgD;EAA5CC,KAAK,EAAC;AAAsC,CAAhD,EAA8B,eAA9B,EAA2C,EAA3C;;oBAAAC;;;;;EAGID,KAAK,EAAC;;;SAJHE,aAAO,CAAP,MAAO,oBAAlBC,oBAEM,KAFN,EAEMC,UAFN,EAEMC,UAFN,oBAGAF,oBAEM,KAFN,EAEMG,UAFN,EAEM,CADFP,oBAA8D,IAA9D,cAA8B,aAAQQ,iBAAEL,aAAO,CAAP,EAAWM,IAAb,CAAtC,EAAuD,CAAvD,CACE,CAFN","names":["_createElementVNode","class","_hoisted_2","_ctx","_createElementBlock","_hoisted_1","_hoisted_3","_hoisted_4","_toDisplayString","name"],"sourceRoot":"","sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/views/UserPage.vue"],"sourcesContent":["<template>\n    <div v-if=\"gotUser[0] === ''\">\n        <h1 class=\"page__description\">User is unset</h1>\n    </div>\n    <div v-else>\n        <h1 class=\"page__description\">Page of {{gotUser[0].name}}</h1>\n    </div>\n    <!--<user-item\n            :user=\"gotUser[0]\"\n    />-->\n</template>\n<script>\nimport {mapState, mapMutations, mapActions, mapGetters} from 'vuex'\nimport UserItem from \"../components/MySlider/UserItem\";\nexport default {\n    name: 'UserPage',\n    components: {UserItem},\n    computed: {\n        ...mapState({\n            gotUser: state => state.TestModule.gotUser,\n        }),\n    }\n}\n</script>\n<style lang=\"sass\" scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}