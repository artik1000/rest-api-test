{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport axios from \"axios\";\nexport const TestModule = {\n  state: () => ({\n    users: [],\n\n    /*users: [\n        {id: 1, avatar:'https://img2.akspic.ru/previews/3/9/1/8/6/168193/168193-paren_v_shleme-motocikletnyj_shlem-motocikl-shlem-odezhda-500x.jpg', name: 'Gosha', email: 'user@mail.net', city: 'Казань', phone: '+7(917)-353-33-55', site: 'https://site.com'},\n        {id: 3, avatar:'https://klike.net/uploads/posts/2019-03/1551511801_1.jpg', name: 'Sasha', email: 'user@mail.net', city: 'Рязань', phone: '+7(947)-855-36-11', site: 'https://site.com'},\n        {id: 5, avatar:'https://i.pinimg.com/736x/14/df/bf/14dfbf0e75988b5daa3aaccddba0eb6d.jpg', name: 'Zakari', email: 'user@mail.net', city: 'Рязань', phone: '+7(947)-954-23-62', site: 'https://site.com'},\n        {id: 6, avatar:'https://i.yapx.ru/Ra8I0.jpg', name: 'Johan', email: 'user@mail.net', city: 'Рязань', phone: '+7(947)-652-03-21', site: 'https://site.com'},\n        {id: 33, avatar:'https://android-obzor.com/wp-content/uploads/2022/02/1-2-300x300.jpg', name: 'Alexander', email: 'user@mail.net', city: 'Белгород', phone: '+7(947)-550-70-39', site: 'https://site.com'},\n        {id: 27, avatar:'https://p16-sign-sg.tiktokcdn.com/aweme/720x720/tos-alisg-avt-0068/8d2c78cdc7ee3cffd5e3b3bc22a87c10.jpeg?x-expires=1658012400&x-signature=SEooVfaPyVQMG3DDNP7QXOeGSGg%3D', name: 'Sultan', email: 'user@mail.net', city: 'Москва', phone: '+7(947)-257-63-72', site: 'https://site.com'},\n        {id: 25, avatar:'https://i.pinimg.com/736x/86/95/54/8695540db1e9224367ed9d1a4884ccfc.jpg', name: 'Gregory', email: 'user@mail.net', city: 'Москва', phone: '+7(947)-153-83-11', site: 'https://site.com'},\n        {id: 22, avatar:'https://www.meme-arsenal.com/memes/6bd0fe45e3ddadd122fd2aa9b626e56b.jpg', name: 'Anna', email: 'user@mail.net', city: 'Казань', phone: '+7(947)-651-31-13', site: 'https://site.com'},\n    ],*/\n    selectedSort: '',\n    searchQuery: '',\n    thisUser: ''\n  }),\n  getters: {\n    sortByCity(state) {\n      return [...state.users].sort((a, b) => a[state.selectedSort]?.localeCompare(b[state.selectedSort])).filter(user => user.city.toLowerCase().includes(state.searchQuery.toLowerCase()));\n    }\n\n  },\n  mutations: {\n    showUser(state, user) {\n      state.thisUser = user.id;\n    },\n\n    setUsers(state, users) {\n      state.users = users;\n    },\n\n    pushUser(state, data) {\n      state.users.push(data);\n    },\n\n    setSortUsers(state, selectedSort) {\n      state.selectedSort = selectedSort;\n\n      if (selectedSort === 'toAlph') {\n        state.users = state.users.sort((a, b) => a.name.localeCompare(b.name));\n        state.selectedSort = '';\n      } else if (selectedSort === 'reverseAlph') {\n        state.users = state.users.sort((a, b) => a.name.localeCompare(b.name)).reverse();\n        state.selectedSort = '';\n      }\n    },\n\n    setSearchQuery(state, searchQuery) {\n      state.searchQuery = searchQuery;\n    },\n\n    addUser(state, data) {\n      state.users.push(data);\n    },\n\n    removeUser(state, user) {\n      state.users = state.users.filter(u => u.id !== user.id);\n    }\n\n  },\n  actions: {\n    async fetchUsers({\n      state,\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/users', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        commit('setUsers', response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async fetchUser({\n      state\n    }) {\n      try {\n        const response = await axios.get(`/api/users/${state.thisUser}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }); //commit('setUsers', response.data);\n\n        console.log(response.data);\n        state.thisUser = '';\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n  },\n  namespaced: true\n};","map":{"version":3,"names":["axios","TestModule","state","users","selectedSort","searchQuery","thisUser","getters","sortByCity","sort","a","b","localeCompare","filter","user","city","toLowerCase","includes","mutations","showUser","id","setUsers","pushUser","data","push","setSortUsers","name","reverse","setSearchQuery","addUser","removeUser","u","actions","fetchUsers","commit","response","get","headers","e","console","log","fetchUser","namespaced"],"sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/store/TestModules/TestModule.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const TestModule = {\n    state: () => ({\n        users:[],\n        /*users: [\n            {id: 1, avatar:'https://img2.akspic.ru/previews/3/9/1/8/6/168193/168193-paren_v_shleme-motocikletnyj_shlem-motocikl-shlem-odezhda-500x.jpg', name: 'Gosha', email: 'user@mail.net', city: 'Казань', phone: '+7(917)-353-33-55', site: 'https://site.com'},\n            {id: 3, avatar:'https://klike.net/uploads/posts/2019-03/1551511801_1.jpg', name: 'Sasha', email: 'user@mail.net', city: 'Рязань', phone: '+7(947)-855-36-11', site: 'https://site.com'},\n            {id: 5, avatar:'https://i.pinimg.com/736x/14/df/bf/14dfbf0e75988b5daa3aaccddba0eb6d.jpg', name: 'Zakari', email: 'user@mail.net', city: 'Рязань', phone: '+7(947)-954-23-62', site: 'https://site.com'},\n            {id: 6, avatar:'https://i.yapx.ru/Ra8I0.jpg', name: 'Johan', email: 'user@mail.net', city: 'Рязань', phone: '+7(947)-652-03-21', site: 'https://site.com'},\n            {id: 33, avatar:'https://android-obzor.com/wp-content/uploads/2022/02/1-2-300x300.jpg', name: 'Alexander', email: 'user@mail.net', city: 'Белгород', phone: '+7(947)-550-70-39', site: 'https://site.com'},\n            {id: 27, avatar:'https://p16-sign-sg.tiktokcdn.com/aweme/720x720/tos-alisg-avt-0068/8d2c78cdc7ee3cffd5e3b3bc22a87c10.jpeg?x-expires=1658012400&x-signature=SEooVfaPyVQMG3DDNP7QXOeGSGg%3D', name: 'Sultan', email: 'user@mail.net', city: 'Москва', phone: '+7(947)-257-63-72', site: 'https://site.com'},\n            {id: 25, avatar:'https://i.pinimg.com/736x/86/95/54/8695540db1e9224367ed9d1a4884ccfc.jpg', name: 'Gregory', email: 'user@mail.net', city: 'Москва', phone: '+7(947)-153-83-11', site: 'https://site.com'},\n            {id: 22, avatar:'https://www.meme-arsenal.com/memes/6bd0fe45e3ddadd122fd2aa9b626e56b.jpg', name: 'Anna', email: 'user@mail.net', city: 'Казань', phone: '+7(947)-651-31-13', site: 'https://site.com'},\n        ],*/\n        selectedSort: '',\n        searchQuery: '',\n        thisUser: ''\n    }),\n    getters: {\n        sortByCity(state){\n\n            return [...state.users].sort((a, b) => a[state.selectedSort]?.localeCompare(b[state.selectedSort])).filter(user => user.city.toLowerCase().includes(state.searchQuery.toLowerCase()))\n        }\n    },\n    mutations: {\n        showUser(state, user) {\n            state.thisUser = user.id;\n        },\n        setUsers(state, users) {\n            state.users = users;\n        },\n        pushUser (state, data) {\n            state.users.push(data);\n        },\n        setSortUsers(state, selectedSort) {\n            state.selectedSort = selectedSort;\n            if (selectedSort === 'toAlph') {\n                state.users = state.users.sort((a, b) => a.name.localeCompare(b.name));\n                state.selectedSort = ''\n            } else if (selectedSort === 'reverseAlph') {\n                state.users = state.users.sort((a, b) => a.name.localeCompare(b.name)).reverse();\n                state.selectedSort = ''\n            }\n        },\n        setSearchQuery(state, searchQuery) {\n            state.searchQuery = searchQuery;\n        },\n        addUser (state, data) {\n            state.users.push(data);\n        },\n        removeUser (state, user){\n            state.users = state.users.filter(u => u.id !== user.id);\n        },\n    },\n    actions: {\n        async fetchUsers({state, commit}) {\n            try {\n                const response = await axios.get('/api/users', {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                });\n                commit('setUsers', response.data)\n            } catch (e) {\n                console.log(e)\n            }\n        },\n        async fetchUser({state}) {\n            try {\n                const response = await axios.get(`/api/users/${state.thisUser}`, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                });\n                //commit('setUsers', response.data);\n                console.log(response.data)\n                state.thisUser = '';\n            } catch (e) {\n                console.log(e)\n            }\n        },\n    },\n    namespaced: true\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}