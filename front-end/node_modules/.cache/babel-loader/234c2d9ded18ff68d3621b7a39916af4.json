{"ast":null,"code":"import axios from \"axios\";\nexport const TestModule = {\n  state: () => ({\n    users: [],\n    page: 1,\n    limit: 5,\n    totalPages: 2\n  }),\n  getters: {},\n  mutations: {\n    setUsers(state, users) {\n      state.users = users;\n    },\n\n    setPage(state, page) {\n      state.page = page;\n    },\n\n    setTotalPages(state, totalPages) {\n      state.users = totalPages;\n    },\n\n    addUser(state, data) {\n      state.users.push(data);\n    },\n\n    removeUser(state, user) {\n      state.users = state.users.filter(p => p.id !== user.id);\n    }\n\n  },\n  actions: {\n    async fetchUsers({\n      state,\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/users', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n          /*params: {\n              _page: state.page,\n              _limit: state.limit\n          }*/\n\n        });\n        /*commit('setTotalPages', Math.ceil(response.headers['x-total-count'] / state.limit))\n        commit('setUsers', response.data)*/\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n  },\n  namespaced: true\n};","map":{"version":3,"names":["axios","TestModule","state","users","page","limit","totalPages","getters","mutations","setUsers","setPage","setTotalPages","addUser","data","push","removeUser","user","filter","p","id","actions","fetchUsers","commit","response","get","headers","e","console","log","namespaced"],"sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/store/TestModules/TestModule.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const TestModule = {\n    state: () => ({\n        users: [],\n        page: 1,\n        limit: 5,\n        totalPages: 2\n    }),\n    getters: {\n\n    },\n    mutations: {\n        setUsers(state, users) {\n            state.users = users;\n        },\n        setPage(state, page) {\n            state.page = page;\n        },\n        setTotalPages(state, totalPages) {\n            state.users = totalPages;\n        },\n        addUser (state, data) {\n            state.users.push(data);\n        },\n        removeUser (state, user){\n            state.users = state.users.filter(p => p.id !== user.id);\n        }\n    },\n    actions: {\n        async fetchUsers({state, commit}) {\n            try {\n                const response = await axios.get('/api/users', {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    /*params: {\n                        _page: state.page,\n                        _limit: state.limit\n                    }*/\n                });\n                /*commit('setTotalPages', Math.ceil(response.headers['x-total-count'] / state.limit))\n                commit('setUsers', response.data)*/\n            } catch (e) {\n                console.log(e)\n            }\n        },\n    },\n    namespaced: true\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG;EACtBC,KAAK,EAAE,OAAO;IACVC,KAAK,EAAE,EADG;IAEVC,IAAI,EAAE,CAFI;IAGVC,KAAK,EAAE,CAHG;IAIVC,UAAU,EAAE;EAJF,CAAP,CADe;EAOtBC,OAAO,EAAE,EAPa;EAUtBC,SAAS,EAAE;IACPC,QAAQ,CAACP,KAAD,EAAQC,KAAR,EAAe;MACnBD,KAAK,CAACC,KAAN,GAAcA,KAAd;IACH,CAHM;;IAIPO,OAAO,CAACR,KAAD,EAAQE,IAAR,EAAc;MACjBF,KAAK,CAACE,IAAN,GAAaA,IAAb;IACH,CANM;;IAOPO,aAAa,CAACT,KAAD,EAAQI,UAAR,EAAoB;MAC7BJ,KAAK,CAACC,KAAN,GAAcG,UAAd;IACH,CATM;;IAUPM,OAAO,CAAEV,KAAF,EAASW,IAAT,EAAe;MAClBX,KAAK,CAACC,KAAN,CAAYW,IAAZ,CAAiBD,IAAjB;IACH,CAZM;;IAaPE,UAAU,CAAEb,KAAF,EAASc,IAAT,EAAc;MACpBd,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYc,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,IAAI,CAACG,EAAtC,CAAd;IACH;;EAfM,CAVW;EA2BtBC,OAAO,EAAE;IACL,MAAMC,UAAN,CAAiB;MAACnB,KAAD;MAAQoB;IAAR,CAAjB,EAAkC;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,YAAV,EAAwB;UAC3CC,OAAO,EAAE;YACL,gBAAgB;UADX;UAGT;AACpB;AACA;AACA;;QAP+D,CAAxB,CAAvB;QASA;AAChB;MACa,CAZD,CAYE,OAAOC,CAAP,EAAU;QACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;MACH;IACJ;;EAjBI,CA3Ba;EA8CtBG,UAAU,EAAE;AA9CU,CAAnB"},"metadata":{},"sourceType":"module"}