{"ast":null,"code":"import axios from \"axios\";\nexport const TestModule = {\n  state: () => ({\n    users: [],\n    page: 1,\n    limit: 10,\n    total: page\n  }),\n  getters: {},\n  mutations: {\n    setUsers(state, users) {\n      state.users = users;\n    },\n\n    addUser(state, data) {\n      state.users.push(data);\n    },\n\n    removeUser(state, user) {\n      state.users = state.users.filter(p => p.id !== user.id);\n    }\n\n  },\n  actions: {\n    async fetchUsers({\n      state,\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/users', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n          /*params: {\n              _page: state.page,\n              _limit: state.limit\n          }*/\n\n        });\n        /* commit('setTotalPages', Math.ceil(response.headers['x-total-count'] / state.limit))*/\n\n        commit('setUsers', response.data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n  },\n  namespaced: true\n};","map":{"version":3,"names":["axios","TestModule","state","users","page","limit","total","getters","mutations","setUsers","addUser","data","push","removeUser","user","filter","p","id","actions","fetchUsers","commit","response","get","headers","e","console","log","namespaced"],"sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/store/TestModules/TestModule.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const TestModule = {\n    state: () => ({\n        users: [],\n        page: 1,\n        limit: 10,\n        total: page\n    }),\n    getters: {\n\n    },\n    mutations: {\n        setUsers(state, users) {\n            state.users = users;\n        },\n        addUser (state, data) {\n            state.users.push(data);\n        },\n        removeUser (state, user){\n            state.users = state.users.filter(p => p.id !== user.id);\n        }\n    },\n    actions: {\n        async fetchUsers({state, commit}) {\n            try {\n                const response = await axios.get('/api/users', {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    /*params: {\n                        _page: state.page,\n                        _limit: state.limit\n                    }*/\n                });\n                /* commit('setTotalPages', Math.ceil(response.headers['x-total-count'] / state.limit))*/\n                commit('setUsers', response.data)\n            } catch (e) {\n                console.log(e)\n            }\n        },\n    },\n    namespaced: true\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAG;EACtBC,KAAK,EAAE,OAAO;IACVC,KAAK,EAAE,EADG;IAEVC,IAAI,EAAE,CAFI;IAGVC,KAAK,EAAE,EAHG;IAIVC,KAAK,EAAEF;EAJG,CAAP,CADe;EAOtBG,OAAO,EAAE,EAPa;EAUtBC,SAAS,EAAE;IACPC,QAAQ,CAACP,KAAD,EAAQC,KAAR,EAAe;MACnBD,KAAK,CAACC,KAAN,GAAcA,KAAd;IACH,CAHM;;IAIPO,OAAO,CAAER,KAAF,EAASS,IAAT,EAAe;MAClBT,KAAK,CAACC,KAAN,CAAYS,IAAZ,CAAiBD,IAAjB;IACH,CANM;;IAOPE,UAAU,CAAEX,KAAF,EAASY,IAAT,EAAc;MACpBZ,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYY,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,IAAI,CAACG,EAAtC,CAAd;IACH;;EATM,CAVW;EAqBtBC,OAAO,EAAE;IACL,MAAMC,UAAN,CAAiB;MAACjB,KAAD;MAAQkB;IAAR,CAAjB,EAAkC;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,YAAV,EAAwB;UAC3CC,OAAO,EAAE;YACL,gBAAgB;UADX;UAGT;AACpB;AACA;AACA;;QAP+D,CAAxB,CAAvB;QASA;;QACAH,MAAM,CAAC,UAAD,EAAaC,QAAQ,CAACV,IAAtB,CAAN;MACH,CAZD,CAYE,OAAOa,CAAP,EAAU;QACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;MACH;IACJ;;EAjBI,CArBa;EAwCtBG,UAAU,EAAE;AAxCU,CAAnB"},"metadata":{},"sourceType":"module"}