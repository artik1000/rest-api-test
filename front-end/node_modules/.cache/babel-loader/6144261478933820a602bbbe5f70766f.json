{"ast":null,"code":"import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';\nimport UserItem from '@/components/MySlider/UserItem';\nimport UserPagination from '@/components/MySlider/UserPagination';\nimport MySortGroup from '../SortGroup';\nexport default {\n  name: 'user-slider',\n  components: {\n    MySortGroup,\n    UserPagination,\n    UserItem\n  },\n  props: {\n    users: {\n      type: Array,\n      required: {\n        type: Boolean,\n        default: true\n      }\n    },\n    buttonEnable: Boolean,\n    usersOnPage: Number\n  },\n\n  data() {\n    return {\n      page: 1,\n      pageFirst: 0,\n      pageLast: 5\n    };\n  },\n\n  methods: { ...mapMutations({\n      setUsers: 'TestModule/setUsers'\n    }),\n    ...mapActions({\n      fetchUsers: 'TestModule/fetchUsers'\n    }),\n\n    changePage(pageNumber) {\n      this.page = pageNumber;\n      this.pageFirst = 5 * this.page - 5;\n      this.pageLast = 5 * this.page;\n    }\n\n  },\n  computed: { ...mapState({\n      selectedSort: state => state.TestModule.selectedSort,\n      totalPages: state => state.TestModule.totalPages\n    }),\n    ...mapGetters({})\n  },\n\n  mounted(usersOnPage) {\n    this.fetchUsers();\n  }\n\n};","map":{"version":3,"mappings":"AA2BA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,UAAjC,EAA6CC,UAA7C,QAA+D,MAA/D;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,eAAe;EACbC,IAAI,EAAE,aADO;EAEbC,UAAU,EAAE;IACVF,WADU;IAEVD,cAFU;IAGVD;EAHU,CAFC;EAObK,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KADD;MAELC,QAAQ,EAAE;QACRF,IAAI,EAAEG,OADE;QAERC,OAAO,EAAE;MAFD;IAFL,CADF;IAQLC,YAAY,EAAEF,OART;IASLG,WAAW,EAAEC;EATR,CAPM;;EAkBbC,IAAG,GAAK;IACN,OAAO;MACLC,IAAI,EAAE,CADD;MAELC,SAAS,EAAE,CAFN;MAGLC,QAAQ,EAAE;IAHL,CAAP;EAKD,CAxBY;;EAyBbC,OAAO,EAAE,EACP,GAAGtB,YAAY,CAAC;MACduB,QAAQ,EAAE;IADI,CAAD,CADR;IAIP,GAAGtB,UAAU,CAAC;MACZuB,UAAU,EAAE;IADA,CAAD,CAJN;;IAOPC,UAAS,CAAGC,UAAH,EAAe;MACtB,KAAKP,IAAL,GAAYO,UAAZ;MACA,KAAKN,SAAL,GAAiB,IAAI,KAAKD,IAAT,GAAgB,CAAjC;MACA,KAAKE,QAAL,GAAgB,IAAI,KAAKF,IAAzB;IACF;;EAXO,CAzBI;EAsCbQ,QAAQ,EAAE,EACR,GAAG5B,QAAQ,CAAC;MACV6B,YAAY,EAAEC,KAAI,IAAKA,KAAK,CAACC,UAAN,CAAiBF,YAD9B;MAEVG,UAAU,EAAEF,KAAI,IAAKA,KAAK,CAACC,UAAN,CAAiBC;IAF5B,CAAD,CADH;IAKR,GAAG7B,UAAU,CAAC,EAAD;EALL,CAtCG;;EA8Cb8B,OAAM,CAAGhB,WAAH,EAAgB;IACpB,KAAKQ,UAAL;EACF;;AAhDa,CAAf","names":["mapState","mapMutations","mapActions","mapGetters","UserItem","UserPagination","MySortGroup","name","components","props","users","type","Array","required","Boolean","default","buttonEnable","usersOnPage","Number","data","page","pageFirst","pageLast","methods","setUsers","fetchUsers","changePage","pageNumber","computed","selectedSort","state","TestModule","totalPages","mounted"],"sourceRoot":"","sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/components/MySlider/UserSlider.vue"],"sourcesContent":["<template>\n    <my-sort-group/>\n    <div v-if=\"this.users.length > 0\">\n    <section class=\"users__wrapper\">\n        <user-item\n                v-for=\"user in users.slice(pageFirst,pageLast)\"\n                :key=\"user.id\"\n                :user=\"user\"\n                :buttonEnable=\"buttonEnable\"\n        />\n    </section>\n    <div class=\"pagination__wrapper\">\n        <user-pagination\n                v-for=\"pageNumber in totalPages\"\n                :key=\"pageNumber\"\n                :class=\"{'pagination__active': page === pageNumber}\"\n                @click=\"changePage(pageNumber)\"\n        >\n            {{pageNumber}}\n        </user-pagination>\n    </div>\n    </div>\n    <div style=\"text-align: center\" v-else>\n        <h1>Пользователей нет</h1>\n    </div>\n</template>\n<script>\nimport { mapState, mapMutations, mapActions, mapGetters } from 'vuex'\nimport UserItem from '@/components/MySlider/UserItem'\nimport UserPagination from '@/components/MySlider/UserPagination'\nimport MySortGroup from '../SortGroup'\nexport default {\n  name: 'user-slider',\n  components: {\n    MySortGroup,\n    UserPagination,\n    UserItem\n  },\n  props: {\n    users: {\n      type: Array,\n      required: {\n        type: Boolean,\n        default: true\n      }\n    },\n    buttonEnable: Boolean,\n    usersOnPage: Number,\n  },\n  data () {\n    return {\n      page: 1,\n      pageFirst: 0,\n      pageLast: 5,\n    }\n  },\n  methods: {\n    ...mapMutations({\n      setUsers: 'TestModule/setUsers'\n    }),\n    ...mapActions({\n      fetchUsers: 'TestModule/fetchUsers'\n    }),\n    changePage (pageNumber) {\n      this.page = pageNumber\n      this.pageFirst = 5 * this.page - 5\n      this.pageLast = 5 * this.page\n    }\n  },\n  computed: {\n    ...mapState({\n      selectedSort: state => state.TestModule.selectedSort,\n      totalPages: state => state.TestModule.totalPages\n    }),\n    ...mapGetters({\n    })\n  },\n  mounted (usersOnPage) {\n    this.fetchUsers();\n  }\n}\n</script>\n<style lang=\"sass\" scoped>\n.users__wrapper\n   display: flex\n   flex-direction: row\n   gap: 10px\n.pagination__wrapper\n    display: flex\n    flex-direction: row\n    justify-content: center\n    margin-top: 16px\n    gap: 5px\n.pagination__active\n    color: blue !important\n    background: white !important\n    border: 2px solid blue !important\n</style>\n"]},"metadata":{},"sourceType":"module"}