{"ast":null,"code":"import { resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4f24487e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"typle\", \"vlaue\", \"placeholder\"];\nconst _hoisted_2 = [\"typle\", \"vlaue\", \"placeholder\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_maska = _resolveDirective(\"maska\");\n\n  return $props.typ === 'tel' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    typle: $props.typ,\n    class: \"my__input\",\n    vlaue: $props.modelValue,\n    placeholder: $props.placeholder,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateInput && $options.updateInput(...args)),\n    required: \"\"\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_1)), [[_directive_maska, '+7(###)###-##-##']]) : (_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    class: \"my__input\",\n    typle: $props.typ,\n    vlaue: $props.modelValue,\n    placeholder: $props.placeholder,\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.updateInput && $options.updateInput(...args)),\n    required: \"\"\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2));\n}","map":{"version":3,"mappings":";;;;;;;;;SACiBA,eAAG,uCAAhBC,oBAAsK,OAAtK,EAAsK;UAAA;IAA5GC,KAAK,EAAEF,UAAqG;IAAhGG,KAAK,EAAC,WAA0F;IAA7EC,KAAK,EAAEJ,iBAAsE;IAAzDK,WAAW,EAAEL,kBAA4C;IAA9BM,OAAK,yCAAEC,qDAAF,CAAyB;IAAVC,QAAQ,EAAR;EAAU,CAAtK;;EAAA,oCAAqC,uCACrCP,oBAA2H,OAA3H,EAA2H;UAAA;IAA7GE,KAAK,EAAC,WAAuG;IAA1FD,KAAK,EAAEF,UAAmF;IAA7EI,KAAK,EAAEJ,iBAAsE;IAAzDK,WAAW,EAAEL,kBAA4C;IAA9BM,OAAK,yCAAEC,qDAAF,CAAyB;IAAVC,QAAQ,EAAR;EAAU,CAA3H;;EAAA","names":["$props","_createElementBlock","typle","class","vlaue","placeholder","onInput","$options","required"],"sourceRoot":"","sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/components/MyInput.vue"],"sourcesContent":["<template>\n    <input v-if=\"typ === 'tel'\" v-maska=\"'+7(###)###-##-##'\" :typle=\"typ\" class=\"my__input\" :vlaue=\"modelValue\" :placeholder=\"placeholder\" @input=\"updateInput\" required/>\n    <input v-else class=\"my__input\" :typle=\"typ\" :vlaue=\"modelValue\" :placeholder=\"placeholder\" @input=\"updateInput\" required/>\n</template>\n<script>\nimport { maska } from 'maska'\nexport default {\n  name: 'my-input',\n  directives: { maska },\n  props: {\n    modelValue: [String, Number],\n    placeholder: String,\n    typ: String\n  },\n  methods: {\n    updateInput (event) {\n      this.$emit('update:modelValue', event.target.value)\n    }\n  }\n}\n</script>\n<style lang=\"sass\" scoped>\n    .my__input\n        border: 1px solid transparent\n        padding: 10px 16px 10px 16px\n        border-radius: 10px\n        box-sizing: border-box\n        display: flex\n        width: 100%\n    .my__input::placeholder\n        color: #B4B4B4\n    .my__input:active, :hover, :focus\n        outline: 0\n        outline-offset: 0\n</style>\n"]},"metadata":{},"sourceType":"module"}