{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport axios from 'axios';\nexport const TestModule = {\n  state: () => ({\n    users: [],\n    selectedSort: '',\n    searchQuery: '',\n    thisUser: '',\n    gotUser: '',\n    totalPages: 0,\n    usersOnPages: 0\n  }),\n  getters: {\n    sortByCity(state) {\n      return [...state.users].sort((a, b) => a[state.selectedSort]?.localeCompare(b[state.selectedSort])).filter(user => user.city.toLowerCase().includes(state.searchQuery.toLowerCase()));\n    }\n\n  },\n  mutations: {\n    setGotUser(state, response) {\n      state.gotUser = response;\n    },\n\n    setUsersOnPage(state, usersOnPage) {\n      state.usersOnPage = usersOnPage;\n    },\n\n    showUser(state, user) {\n      state.thisUser = user.id;\n    },\n\n    setUsers(state, users) {\n      state.users = users;\n    },\n\n    pushUser(state, data) {\n      state.users.push(data);\n    },\n\n    setSortUsers(state, selectedSort) {\n      state.selectedSort = selectedSort;\n\n      if (selectedSort === 'toAlph') {\n        state.users = state.users.sort((a, b) => a.name.localeCompare(b.name));\n        state.selectedSort = '';\n      } else if (selectedSort === 'reverseAlph') {\n        state.users = state.users.sort((a, b) => a.name.localeCompare(b.name)).reverse();\n        state.selectedSort = '';\n      }\n    },\n\n    setSearchQuery(state, searchQuery) {\n      state.searchQuery = searchQuery;\n    },\n\n    addUser(state, data) {\n      state.users.push(data);\n    },\n\n    removeUser(state, user) {\n      state.users = state.users.filter(u => u.id !== user.id);\n    }\n\n  },\n  actions: {\n    async fetchUsers({\n      state,\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/users', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        commit('setUsers', response.data);\n        state.totalPages = Math.ceil(state.users.length / state.usersOnPages);\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    async fetchUser({\n      state,\n      commit\n    }) {\n      try {\n        const response = await axios.get(`/api/users/${state.thisUser}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        commit('setGotUser', response.data);\n        state.thisUser = '';\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n  },\n  namespaced: true\n};","map":{"version":3,"names":["axios","TestModule","state","users","selectedSort","searchQuery","thisUser","gotUser","totalPages","usersOnPages","getters","sortByCity","sort","a","b","localeCompare","filter","user","city","toLowerCase","includes","mutations","setGotUser","response","setUsersOnPage","usersOnPage","showUser","id","setUsers","pushUser","data","push","setSortUsers","name","reverse","setSearchQuery","addUser","removeUser","u","actions","fetchUsers","commit","get","headers","Math","ceil","length","e","console","log","fetchUser","namespaced"],"sources":["/Users/maksimov/Documents/Проекты/rest-api-test/front-end/src/store/TestModules/TestModule.js"],"sourcesContent":["import axios from 'axios'\n\nexport const TestModule = {\n  state: () => ({\n    users: [],\n    selectedSort: '',\n    searchQuery: '',\n    thisUser: '',\n    gotUser: '',\n    totalPages: 0,\n    usersOnPages: 0,\n  }),\n  getters: {\n    sortByCity (state) {\n      return [...state.users].sort((a, b) => a[state.selectedSort]?.localeCompare(b[state.selectedSort])).filter(user => user.city.toLowerCase().includes(state.searchQuery.toLowerCase()))\n    }\n  },\n  mutations: {\n    setGotUser (state, response) {\n      state.gotUser = response\n    },\n    setUsersOnPage (state, usersOnPage) {\n      state.usersOnPage = usersOnPage\n    },\n    showUser (state, user) {\n      state.thisUser = user.id\n    },\n    setUsers (state, users) {\n      state.users = users\n    },\n    pushUser (state, data) {\n      state.users.push(data)\n    },\n    setSortUsers (state, selectedSort) {\n      state.selectedSort = selectedSort\n      if (selectedSort === 'toAlph') {\n        state.users = state.users.sort((a, b) => a.name.localeCompare(b.name))\n        state.selectedSort = ''\n      } else if (selectedSort === 'reverseAlph') {\n        state.users = state.users.sort((a, b) => a.name.localeCompare(b.name)).reverse()\n        state.selectedSort = ''\n      }\n    },\n    setSearchQuery (state, searchQuery) {\n      state.searchQuery = searchQuery\n    },\n    addUser (state, data) {\n      state.users.push(data)\n    },\n    removeUser (state, user) {\n      state.users = state.users.filter(u => u.id !== user.id)\n    }\n  },\n  actions: {\n    async fetchUsers ({ state, commit }) {\n      try {\n        const response = await axios.get('/api/users', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        commit('setUsers', response.data);\n        state.totalPages = Math.ceil(state.users.length / state.usersOnPages);\n      } catch (e) {\n        console.log(e)\n      }\n    },\n    async fetchUser ({ state, commit }) {\n      try {\n        const response = await axios.get(`/api/users/${state.thisUser}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        commit('setGotUser', response.data)\n        state.thisUser = ''\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  },\n  namespaced: true\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}